version: '3.8'
services:
  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=${rabbit_user}
      - RABBITMQ_DEFAULT_PASS=${rabbit_pass}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment: 
      - MONGO_INITDB_ROOT_USERNAME=${mongo_user}
      - MONGO_INITDB_ROOT_PASSWORD=${mongo_pass}
    volumes:
      - mongo-data:/data/db
    ports:
      - 27017:27017
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  
  producer:
    build:
      context: ./producer
    container_name: producer
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=${rabbit_user}
      - RABBITMQ_PASS=${rabbit_pass}
    volumes:
      - ./producer:/app
      - ./models:/app/models
  consumer:
    build:
      context: ./consumer
    container_name: consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - MONGO_HOST=mongodb
      - MONGO_USER=${mongo_user}
      - MONGO_PASS=${mongo_pass}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=${rabbit_user}
      - RABBITMQ_PASS=${rabbit_pass}
    volumes:
      - ./consumer:/app
      - ./models:/app/models

  api:
    build:
      context: ./api
    container_name: api
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - MONGO_HOST=mongodb
      - MONGO_USER=${mongo_user}
      - MONGO_PASS=${mongo_pass}
    ports:
      - "8000:8000"
    restart: unless-stopped
    volumes:
      - ./api:/app
      - ./models:/app/models
volumes:
  rabbitmq-data:
  mongo-data:
  




